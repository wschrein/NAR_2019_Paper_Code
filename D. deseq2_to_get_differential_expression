{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning message:\n",
      "\"package 'DESeq2' was built under R version 3.4.3\"Warning message:\n",
      "\"package 'S4Vectors' was built under R version 3.4.3\"Warning message:\n",
      "\"package 'BiocGenerics' was built under R version 3.4.3\"Warning message:\n",
      "\"package 'IRanges' was built under R version 3.4.3\"Warning message:\n",
      "\"package 'GenomicRanges' was built under R version 3.4.3\"Warning message:\n",
      "\"package 'GenomeInfoDb' was built under R version 3.4.3\"Warning message:\n",
      "\"package 'SummarizedExperiment' was built under R version 3.4.3\"Warning message:\n",
      "\"package 'Biobase' was built under R version 3.4.3\"Warning message:\n",
      "\"package 'DelayedArray' was built under R version 3.4.3\"Warning message:\n",
      "\"package 'matrixStats' was built under R version 3.4.3\"Warning message:\n",
      "\"package 'pcaExplorer' was built under R version 3.4.3\"\n"
     ]
    }
   ],
   "source": [
    "suppressMessages(library(\"DESeq2\"))\n",
    "library(\"ggplot2\")\n",
    "\n",
    "library(\"RColorBrewer\")\n",
    "\n",
    "library(\"pcaExplorer\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>N2_CTR_1</th><th scope=col>N2_CTR_3</th><th scope=col>N2_CTR_4</th><th scope=col>N2_HS_1</th><th scope=col>N2_HS_3</th><th scope=col>N2_HS_4</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>WBGene00022277_1</th><td> 4</td><td> 3</td><td> 7</td><td> 0</td><td> 1</td><td> 5</td></tr>\n",
       "\t<tr><th scope=row>WBGene00022277_2</th><td>14</td><td> 4</td><td>22</td><td> 0</td><td> 3</td><td> 8</td></tr>\n",
       "\t<tr><th scope=row>WBGene00022277_3</th><td>19</td><td>36</td><td>45</td><td>10</td><td> 8</td><td>26</td></tr>\n",
       "\t<tr><th scope=row>WBGene00022277_4</th><td> 9</td><td> 9</td><td>11</td><td>11</td><td>10</td><td> 5</td></tr>\n",
       "\t<tr><th scope=row>WBGene00022276_1</th><td> 8</td><td> 6</td><td> 8</td><td> 8</td><td> 4</td><td> 7</td></tr>\n",
       "\t<tr><th scope=row>WBGene00022276_5</th><td>59</td><td>85</td><td>96</td><td>18</td><td>20</td><td>34</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|llllll}\n",
       "  & N2\\_CTR\\_1 & N2\\_CTR\\_3 & N2\\_CTR\\_4 & N2\\_HS\\_1 & N2\\_HS\\_3 & N2\\_HS\\_4\\\\\n",
       "\\hline\n",
       "\tWBGene00022277\\_1 &  4 &  3 &  7 &  0 &  1 &  5\\\\\n",
       "\tWBGene00022277\\_2 & 14 &  4 & 22 &  0 &  3 &  8\\\\\n",
       "\tWBGene00022277\\_3 & 19 & 36 & 45 & 10 &  8 & 26\\\\\n",
       "\tWBGene00022277\\_4 &  9 &  9 & 11 & 11 & 10 &  5\\\\\n",
       "\tWBGene00022276\\_1 &  8 &  6 &  8 &  8 &  4 &  7\\\\\n",
       "\tWBGene00022276\\_5 & 59 & 85 & 96 & 18 & 20 & 34\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "| <!--/--> | N2_CTR_1 | N2_CTR_3 | N2_CTR_4 | N2_HS_1 | N2_HS_3 | N2_HS_4 | \n",
       "|---|---|---|---|---|---|\n",
       "| WBGene00022277_1 |  4 |  3 |  7 |  0 |  1 |  5 | \n",
       "| WBGene00022277_2 | 14 |  4 | 22 |  0 |  3 |  8 | \n",
       "| WBGene00022277_3 | 19 | 36 | 45 | 10 |  8 | 26 | \n",
       "| WBGene00022277_4 |  9 |  9 | 11 | 11 | 10 |  5 | \n",
       "| WBGene00022276_1 |  8 |  6 |  8 |  8 |  4 |  7 | \n",
       "| WBGene00022276_5 | 59 | 85 | 96 | 18 | 20 | 34 | \n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "                 N2_CTR_1 N2_CTR_3 N2_CTR_4 N2_HS_1 N2_HS_3 N2_HS_4\n",
       "WBGene00022277_1  4        3        7        0       1       5     \n",
       "WBGene00022277_2 14        4       22        0       3       8     \n",
       "WBGene00022277_3 19       36       45       10       8      26     \n",
       "WBGene00022277_4  9        9       11       11      10       5     \n",
       "WBGene00022276_1  8        6        8        8       4       7     \n",
       "WBGene00022276_5 59       85       96       18      20      34     "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "counts <- read.csv('counts_for_deseq2.csv',header=TRUE, row.names=1)\n",
    "\n",
    "counts$Length <- NULL\n",
    "\n",
    "head(counts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>condition</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>N2_CTR_1</th><td>CTR</td></tr>\n",
       "\t<tr><th scope=row>N2_CTR_3</th><td>CTR</td></tr>\n",
       "\t<tr><th scope=row>N2_CTR_4</th><td>CTR</td></tr>\n",
       "\t<tr><th scope=row>N2_HS_1</th><td>HS </td></tr>\n",
       "\t<tr><th scope=row>N2_HS_3</th><td>HS </td></tr>\n",
       "\t<tr><th scope=row>N2_HS_4</th><td>HS </td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|l}\n",
       "  & condition\\\\\n",
       "\\hline\n",
       "\tN2\\_CTR\\_1 & CTR\\\\\n",
       "\tN2\\_CTR\\_3 & CTR\\\\\n",
       "\tN2\\_CTR\\_4 & CTR\\\\\n",
       "\tN2\\_HS\\_1 & HS \\\\\n",
       "\tN2\\_HS\\_3 & HS \\\\\n",
       "\tN2\\_HS\\_4 & HS \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "| <!--/--> | condition | \n",
       "|---|---|---|---|---|---|\n",
       "| N2_CTR_1 | CTR | \n",
       "| N2_CTR_3 | CTR | \n",
       "| N2_CTR_4 | CTR | \n",
       "| N2_HS_1 | HS  | \n",
       "| N2_HS_3 | HS  | \n",
       "| N2_HS_4 | HS  | \n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "         condition\n",
       "N2_CTR_1 CTR      \n",
       "N2_CTR_3 CTR      \n",
       "N2_CTR_4 CTR      \n",
       "N2_HS_1  HS       \n",
       "N2_HS_3  HS       \n",
       "N2_HS_4  HS       "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "col_data <- read.csv('conditions_for_deseq2.csv',\n",
    "                  header=TRUE, row.names=1)\n",
    "\n",
    "head(col_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "dds <- DESeqDataSetFromMatrix(countData = counts,\n",
    "                              colData = col_data,\n",
    "                              design = ~ condition)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "dds <- dds[ rowSums(counts(dds)) > 0, ]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "estimating size factors\n",
      "estimating dispersions\n",
      "gene-wise dispersion estimates\n",
      "mean-dispersion relationship\n",
      "final dispersion estimates\n",
      "fitting model and testing\n"
     ]
    }
   ],
   "source": [
    "dds <- DESeq(dds)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get the NORMALIZED READS from Deseq2 \n",
    "\n",
    "dds <- estimateSizeFactors(dds)\n",
    "all_norm_counts=counts(dds, normalized=TRUE)\n",
    "\n",
    "# convert it to a dataframe then save it to a csv\n",
    "all_norm_counts_df <-as.data.frame(all_norm_counts)\n",
    "write.csv(as.data.frame(all_norm_counts_df), file=\"intron_normalized_DESEQ2_READS.csv\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "3.4.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
